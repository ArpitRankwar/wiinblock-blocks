name: Weekly Update Translations

on:
  schedule:
    - cron:  '0 0 * * 1,4' # Run at 00:00 on Monday and Thursday.

jobs:
  weekly-update:
    runs-on: ubuntu-latest
    env:
      NPM_TAG: latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-python@v2
        with:
          python-version: '2.x'

      - run: npm ci

      - name: Update openblock-l10n
        run: npm i --save openblock-l10n@latest

      - name: Sync translations
        run: |
          export TX_TOKEN=${{ secrets.TX_TOKEN }}
          npm run translate
          npm run translate:update
          npm run test:messages

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)

      - name: Update translations changes in GitHub repository
        if: steps.git-check.outputs.modified == 'true'
        run:  |
          git config --global user.email "$(git log --pretty=format:"%ae" -n1)"
          git config --global user.name "$(git log --pretty=format:"%an" -n1)"
          git add .
          git commit -m '[skip ci] Update translations from transifex'
          git remote add origin-translation https://x-access-token:${GH_TOKEN}@github.com/$GITHUB_REPOSITORY
          git push --set-upstream origin-translation develop

      - name: Set test env
        run: |
          export DISPLAY=:99.0
          tests/scripts/setup_linux_env.sh
          sleep 2

      - run: npm test

      - name: Get package main version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0

      - name: Set package sub version
        run: |
          export RELEASE_VERSION=${{ steps.package-version.outputs.current-version }}-prerelease.$(date +'%Y%m%d%H%M%S')
          npm --no-git-tag-version version $RELEASE_VERSION

      - name: Tag release
        run: |
          export RELEASE_VERSION=${{ steps.package-version.outputs.current-version }}-prerelease.$(date +'%Y%m%d%H%M%S')
          git tag $RELEASE_VERSION
          git push https://x-access-token:${GH_TOKEN}@github.com/$GITHUB_REPOSITORY $RELEASE_VERSION

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

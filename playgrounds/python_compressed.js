// Do not edit this file; automatically generated by build.py.
'use strict';

let Blockly = require('openblock-blocks');

Blockly.Python=new Blockly.Generator("Python");Blockly.Python.addReservedWords("and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,not,or,pass,print,raise,return,try,while,with,yield,True,False,None,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,abs,divmod,input,open,staticmethod,all,enumerate,int,ord,str,any,eval,isinstance,pow,sum,basestring,execfile,issubclass,print,super,bin,file,iter,property,tuple,bool,filter,len,range,type,bytearray,float,list,raw_input,unichr,callable,format,locals,reduce,unicode,chr,frozenset,long,reload,vars,classmethod,getattr,map,repr,xrange,cmp,globals,max,reversed,zip,compile,hasattr,memoryview,round,__import__,complex,hash,min,set,apply,delattr,help,next,setattr,buffer,dict,hex,object,slice,coerce,dir,id,oct,sorted,intern");
Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2.1;Blockly.Python.ORDER_FUNCTION_CALL=2.2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;
Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;Blockly.Python.INDENT="  ";
Blockly.Python.init=function(a){Blockly.Python.imports_=Object.create(null);Blockly.Python.customFunctions_=Object.create(null);Blockly.Python.customFunctionsArgName_=Object.create(null);Blockly.Python.libraries_=Object.create(null);Blockly.Python.variables_=Object.create(null);Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_);Blockly.Python.variableDB_.setVariableMap(a.getVariableMap());var b=[];a=Blockly.Variables.allVariables(a);
for(var c=0;c<a.length;c++)b[c]=Blockly.Python.variableDB_.getName(a[c].name,Blockly.Variables.NAME_TYPE)+" = 0";0<a.length&&(Blockly.Python.variables_.variables=b.join("\n"))};
Blockly.Python.finish=function(a){var b=[];for(e in Blockly.Python.imports_)b.push(Blockly.Python.imports_[e]);var c=[];for(e in Blockly.Python.customFunctions_)c.push(Blockly.Python.customFunctions_[e]);var d=[];for(e in Blockly.Python.libraries_)d.push(Blockly.Python.libraries_[e]);var f=[];for(e in Blockly.Python.variables_)f.push(Blockly.Python.variables_[e]);var e="# generated by OpenBlock\n";0!=b.length&&(e+=b.join("\n")+"\n\n");0!=c.length&&(e+=c.join("\n\n")+"\n\n");0!=d.length&&(e+=d.join("\n")+
"\n\n");0!=f.length&&(e+=f.join("\n")+"\n\n");e+=a+"\n";delete Blockly.Python.imports_;delete Blockly.Python.libraries_;delete Blockly.Python.variables_;delete Blockly.Python.customFunctions_;delete Blockly.Python.customFunctionsArgName_;Blockly.Python.variableDB_.reset();return e};
Blockly.Python.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.Python.prefixLines(d,"# ")+"\n");for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.INPUT_VALUE&&(d=a.inputList[f].connection.targetBlock())&&(d=Blockly.Python.allNestedComments(d))&&(c+=Blockly.Python.prefixLines(d,"# "))}if(null===a.getSurroundParent()&&(null!==a.previousConnection&&null!==a.getTopStackBlock().previousConnection||
2===a.getOutputShape()||1===a.getOutputShape()))return"";"procedures_definition"===a.getTopStackBlock().type&&("procedures_definition"!==a.type&&"procedures_prototype"!==a.type&&(b=Blockly.Python.INDENT+b,""!==c&&(c=Blockly.Python.INDENT+c)),b=b.replace(/\n/g,"\n"+Blockly.Python.INDENT),b=b.slice(0,b.length-2));a=a.nextConnection&&a.nextConnection.targetBlock();a=Blockly.Python.blockToCode(a);return c+b+a};Blockly.Python.scrubNakedValue=function(a){return a+";\n"};
Blockly.Python.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/%/g,"\\%").replace(/'/g,"\\'");return"'"+a+"'"};Blockly.Python.matrix={};Blockly.Python.matrix=function(a){a=a.getFieldValue("MATRIX");isNaN(a)&&(a=0);return[a,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.procedures={};Blockly.Python.procedures_definition=function(a){var b=Blockly.Python.statementToCode(a,"custom_block");b=b.slice(2);a=Blockly.Python.scrub_(a,b+":\n");Blockly.Python.customFunctions_[b]=a+"\n\n";return null};
Blockly.Python.procedures_call=function(a){var b=a.getProcCode();b=b.replace(/ /g,"_");b=b.replace(/%n/g,"N");b=b.replace(/%s/g,"S");b=b.replace(/%b/g,"B");b=Blockly.Python.variableDB_.getName(b,Blockly.Procedures.NAME_TYPE);for(var c=[],d=0;d<a.inputList.length;d++)if(a.inputList[d].type==Blockly.INPUT_VALUE)if(a.inputList[d].connection.targetBlock()){var f=a.inputList[d].connection.targetBlock();f=Blockly.Python.blockToCode(f);c.push(f[0])}else c.push("false");return b+"("+c.join(", ")+");\n"};
Blockly.Python.procedures_prototype=function(a){var b=a.getProcCode();a=a.displayNames_;var c=[];b=b.replace(/ /g,"_");for(var d=0;d<a.length;d++){var f=b.charAt(b.indexOf("%")+1),e=Blockly.Python.variableDB_.getName(a[d],Blockly.Procedures.NAME_TYPE);Blockly.Python.customFunctionsArgName_[a[d]]=e;b="n"===f?b.replace("%n","N"):"s"===f?b.replace("%s","S"):b.replace("%b","B");c.push(e)}b=Blockly.Python.variableDB_.getName(b,Blockly.Procedures.NAME_TYPE);return"def "+b+"("+c.join(", ")+")"};
Blockly.Python.argument_reporter_boolean=function(a){a=a.getFieldValue("VALUE");return[Blockly.Python.customFunctionsArgName_[a],Blockly.Python.ORDER_ATOMIC]};Blockly.Python.argument_reporter_number=function(a){a=a.getFieldValue("VALUE");return[Blockly.Python.customFunctionsArgName_[a],Blockly.Python.ORDER_ATOMIC]};Blockly.Python.argument_reporter_string=function(a){a=a.getFieldValue("VALUE");return[Blockly.Python.customFunctionsArgName_[a],Blockly.Python.ORDER_ATOMIC]};Blockly.Python.texts={};Blockly.Python.text=function(a){return[Blockly.Python.quote_(a.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.event={};Blockly.Python.event_whenmicrobitbegin=function(){Blockly.Python.imports_.microbit="from microbit import *";return""};Blockly.Python.microbit={};Blockly.Python.microbit_display_showImage=function(a){a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_ATOMIC)||"0";a=a.slice(0,5)+":"+a.slice(5,10)+":"+a.slice(10,15)+":"+a.slice(15,20)+":"+a.slice(20,25);return"display.show(Image('"+a+"'))\n"};Blockly.Python.microbit_display_showNumber=function(a){return"display.scroll(str("+(Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_FUNCTION_CALL)||"0")+"), wait=False, loop=False)\n"};
Blockly.Python.microbit_display_showString=function(a){return"display.scroll(str("+(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_FUNCTION_CALL)||"0")+"), wait=True, loop=False)\n"};Blockly.Python.math={};Blockly.Python.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));isNaN(a)&&(a=0);return[a,0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC]};Blockly.Python.math_angle=Blockly.Python.math_number;Blockly.Python.math_positive_number=Blockly.Python.math_number;Blockly.Python.math_whole_number=Blockly.Python.math_number;Blockly.Python.data={};Blockly.Python.data_variable=function(a){return[Blockly.Python.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.data_setvariableto=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_ADDITIVE)||"0";a=Blockly.Python.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE);parseFloat(b.slice(1,-1))==b.slice(1,-1)&&(b=parseFloat(b.slice(1,-1)).toString());return a+" = "+b+"\n"};
Blockly.Python.data_changevariableby=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_ADDITIVE)||"0";a=Blockly.Python.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE);parseFloat(b.slice(1,-1))==b.slice(1,-1)&&(b=parseFloat(b.slice(1,-1)).toString());return a+" += "+b+"\n"};Blockly.Python.control={};Blockly.Python.control_wait=function(a){return"sleep("+Blockly.Python.valueToCode(a,"DURATION",Blockly.Python.ORDER_FUNCTION_CALL)+" * 1000)\n"};Blockly.Python.control_repeat=function(a){var b=Blockly.Python.valueToCode(a,"TIMES",Blockly.Python.ORDER_FUNCTION_CALL),c=Blockly.Python.statementToCode(a,"SUBSTACK");c=Blockly.Python.addLoopTrap(c,a.id);a="for count in range("+b+"):\n";a=c?a+c:a+(Blockly.Python.INDENT+"pass\n");return a+"\n"};
Blockly.Python.control_forever=function(a){var b=Blockly.Python.statementToCode(a,"SUBSTACK");b=Blockly.Python.addLoopTrap(b,a.id);a="while True:\n";a=b?a+b:a+(Blockly.Python.INDENT+"pass\n");return a+"\n"};Blockly.Python.control_if=function(a){var b=Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(a,"SUBSTACK");c=Blockly.Python.addLoopTrap(c,a.id);a="if "+b+":\n";a=c?a+c:a+(Blockly.Python.INDENT+"pass\n");return a+"\n"};
Blockly.Python.control_if_else=function(a){var b=Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(a,"SUBSTACK");c=Blockly.Python.addLoopTrap(c,a.id);var d=Blockly.Python.statementToCode(a,"SUBSTACK2");d=Blockly.Python.addLoopTrap(d,a.id);a="if "+b+":\n";a=c?a+c:a+(Blockly.Python.INDENT+"pass\n");a+="else:\n";a=d?a+d:a+(Blockly.Python.INDENT+"pass\n");return a+"\n"};
Blockly.Python.control_wait_until=function(a){a="while not "+(Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_UNARY_POSTFIX)||"False")+":\n"+(Blockly.Python.INDENT+"pass\n");return a+"\n"};
Blockly.Python.control_repeat_until=function(a){var b=Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_UNARY_POSTFIX)||"False",c=Blockly.Python.statementToCode(a,"SUBSTACK");c=Blockly.Python.addLoopTrap(c,a.id);a="while not "+b+":\n";a=c?a+c:a+(Blockly.Python.INDENT+"pass\n");return a+"\n"};Blockly.Python.operator={};Blockly.Python.operator_arithmetic=function(a){var b={operator_add:[" + ",Blockly.Python.ORDER_ADDITIVE],operator_subtract:[" - ",Blockly.Python.ORDER_ADDITIVE],operator_multiply:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],operator_divide:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE]}[a.type],c=b[0];b=b[1];var d=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[d+c+a,b]};Blockly.Python.operator_add=Blockly.Python.operator_arithmetic;
Blockly.Python.operator_subtract=Blockly.Python.operator_arithmetic;Blockly.Python.operator_multiply=Blockly.Python.operator_arithmetic;Blockly.Python.operator_divide=Blockly.Python.operator_arithmetic;Blockly.Python.operator_random=function(a){var b=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_FUNCTION_CALL)||"0";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_FUNCTION_CALL)||"0";return["random.randint("+b+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.operator_compare=function(a){var b=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(a,"OPERAND1",b),d=Blockly.Python.valueToCode(a,"OPERAND2",b);"''"===c&&(c="0");"''"===d&&(d="0");parseFloat(c.slice(1,-1))==c.slice(1,-1)&&(c=parseFloat(c.slice(1,-1)).toString());parseFloat(d.slice(1,-1))==d.slice(1,-1)&&(d=parseFloat(d.slice(1,-1)).toString());return[c+{operator_gt:" > ",operator_equals:" == ",operator_lt:" < "}[a.type]+d,b]};Blockly.Python.operator_gt=Blockly.Python.operator_compare;
Blockly.Python.operator_equals=Blockly.Python.operator_compare;Blockly.Python.operator_lt=Blockly.Python.operator_compare;Blockly.Python.operator_operation=function(a){var b="operator_and"==a.type?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,c=Blockly.Python.valueToCode(a,"OPERAND1",b)||"0",d=Blockly.Python.valueToCode(a,"OPERAND2",b)||"0";return[c+{operator_and:" and ",operator_or:" or "}[a.type]+d,b]};Blockly.Python.operator_and=Blockly.Python.operator_operation;
Blockly.Python.operator_or=Blockly.Python.operator_operation;Blockly.Python.operator_not=function(a){var b=Blockly.Python.ORDER_LOGICAL_NOT;return["not "+(Blockly.Python.valueToCode(a,"OPERAND",b)||"false"),b]};Blockly.Python.operator_join=function(a){var b=Blockly.Python.ORDER_UNARY_PREFIX,c=Blockly.Python.valueToCode(a,"STRING1",b)||"''";a=Blockly.Python.valueToCode(a,"STRING2",b)||"''";return["str("+c+") + str("+a+")",Blockly.Python.ORDER_ADDITIVE]};
Blockly.Python.operator_letter_of=function(a){var b=Blockly.Python.valueToCode(a,"STRING",Blockly.Python.ORDER_UNARY_SIGN)||"''";a=Blockly.Python.valueToCode(a,"LETTER",Blockly.Python.ORDER_MEMBER)||"0";a=parseFloat(a)==a?a-1:a+" - 1";return[b+"["+a+"]",Blockly.Python.ORDER_MEMBER]};Blockly.Python.operator_length=function(a){return["len("+(Blockly.Python.valueToCode(a,"STRING",Blockly.Python.ORDER_FUNCTION_CALL)||"''")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.operator_contains=function(a){var b=Blockly.Python.ORDER_FUNCTION_CALL,c=Blockly.Python.valueToCode(a,"STRING1",b)||"''";a=Blockly.Python.valueToCode(a,"STRING2",b)||"0";return["str("+c+").find(str("+a+")) > -1",Blockly.Python.ORDER_RELATIONAL]};Blockly.Python.operator_mod=function(a){var b=Blockly.Python.ORDER_MULTIPLICATIVE,c=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[c+" % "+a,b]};
Blockly.Python.operator_round=function(a){return["round("+(Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_UNARY_POSTFIX)||"0")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.operator_mathop=function(a){var b=a.getFieldValue("OPERATOR");a=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_FUNCTION_CALL)||"0";Blockly.Python.imports_.math="import math";var c="",d=Blockly.Python.ORDER_FUNCTION_CALL;switch(b){case "abs":c="math.fabs("+a+")";break;case "floor":c="math.floor("+a+")";break;case "ceiling":c="math.ceil("+a+")";break;case "sqrt":c="math.sqrt("+a+")";break;case "sin":c="math.sin("+a+" / 180.0 * math.pi)";break;case "cos":c="math.cos("+a+" / 180.0 * math.pi)";
break;case "tan":c="math.tan("+a+" / 180.0 * math.pi)";break;case "asin":c="math.asin("+a+") / math.pi * 180";d=Blockly.Python.ORDER_MULTIPLICATIVE;break;case "acos":c="math.acosh("+a+") / math.pi * 180";d=Blockly.Python.ORDER_MULTIPLICATIVE;break;case "atan":c="math.atan("+a+") / math.pi * 180";d=Blockly.Python.ORDER_MULTIPLICATIVE;break;case "ln":c="math.log("+a+")";break;case "log":c="math.log("+a+", 10)";break;case "e ^":c="math.exp("+a+")";break;case "10 ^":c="math.pow(10, "+a+")"}return[c,d]};
